{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,aAIX;AAJD,WAAY,aAAa;IACrB,8BAAa,CAAA;IACb,4BAAW,CAAA;IACX,8BAAa,CAAA;AACjB,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB","sourcesContent":["import type {PluginListenerHandle} from '@capacitor/core';\n\n\nexport enum OutputFormats {\n    JPEG = 'JPEG',\n    PDF = 'PDF',\n    BOTH = 'BOTH',\n}\n\nexport type ScanResult = {\n    images?: string[];\n    pdf?: string | null;\n};\n\ntype URLRequest = {\n  tag: string;\n  url: string;\n};\nexport interface DownloadManagerPlugin {\n    startScan(options?: Partial<{\n        pageLimit: number;\n        mode: string;\n        enableGalleryImport: boolean;\n        outputFormats: OutputFormats;\n    }>): Promise<ScanResult>;\n\n    startDownload(options: { url: string[] }): Promise<{ value: string[] }>;\n\n    startDownloadWithTag(options: {\n      url: URLRequest[];\n    }): Promise<{ value: URLRequest[] }>;\n    \n    removeDownloads(options: { value: string[] }): Promise<{ value: string[] }>;\n\n    pauseDownloads(options: { value: string[] }): Promise<{ value: string[] }>;\n\n    resumeDownloads(): Promise<{ value: string }>;\n\n    getDownloadList(): Promise<{ value: string }>;\n\n    addListener(\n        eventName: string,\n        listenerFunc: (download: { result: string }) => void,\n    ): PluginListenerHandle;\n}\n"]}